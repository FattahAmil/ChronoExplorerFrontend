// 1. Update CSS Variables
:host {
  --primary-font: 'Playfair Display', Georgia, 'Times New Roman', Times, serif;
  --primary-background-color: #f8f4e9; // parchment
  --primary-text-color: #3a3a3a; // dark brown/charcoal
  --secondary-text-color: #6c5f5b; // A slightly lighter, muted brown for secondary text
  --accent-color-gold: #d4af37; // gold
  --card-background-color: #fffef7; // lighter parchment/off-white
  --card-background-color-rgb: 255, 254, 247; // RGB version for opacity
  --border-color: #c8bba8; // muted gold/brown for borders
  --overlay-background: rgba(58, 44, 20, 0.7); // brownish overlay
  --shadow-color: rgba(58, 44, 20, 0.15); // Shadow color to match the theme
  --event-title-color: #5a482c; // Dark brown for event titles for readability
}

@keyframes subtlePulse {
  0%, 100% {
    opacity: 0.7;
  }
  50% {
    opacity: 1;
  }
}

.modal-nav-button {
  position: fixed; // Fixed to the viewport, within the .event-detail-view overlay
  top: 50%;
  transform: translateY(-50%);
  background-color: rgba(0, 0, 0, 0.3); // Semi-transparent background
  color: white;
  border: none;
  border-radius: 50%; // Circular buttons
  width: 40px;
  height: 40px;
  font-size: 24px;
  line-height: 40px; // Center the arrow
  text-align: center;
  cursor: pointer;
  z-index: 1001; // Ensure they are above the content area if content scrolls
  transition: background-color 0.2s ease;

  &:hover {
    background-color: rgba(0, 0, 0, 0.6);
  }

  &.prev {
    left: 20px; // Adjust positioning from edge
  }

  &.next {
    right: 20px; // Adjust positioning from edge
  }
}

// General styles
.timeline-container {
  font-family: var(--primary-font);
  color: var(--primary-text-color);
  background-color: var(--primary-background-color);
  // 2. Apply Background to .timeline-container
  background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="100" height="100" viewBox="0 0 100 100"><rect width="100" height="100" fill="none" stroke="%23d4af37" stroke-width="0.5"/></svg>');
  background-size: 40px 40px;
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  box-sizing: border-box;
  transition: background-color 0.8s ease-in-out; // Add this line
}

// 6. Chronological Bar (.chronological-bar)
.chronological-bar {
  width: 100%;
  height: 30px; // Keep height, or adjust if needed for theme
  background-color: var(--border-color); // Muted gold/brown
  display: flex;
  align-items: center;
  justify-content: space-around;
  padding: 0 10px;
  box-sizing: border-box;
  border-bottom: 1px solid var(--accent-color-gold); // Gold accent border
  flex-shrink: 0;

  .marker {
    width: 2px;
    height: 15px;
    background-color: var(--accent-color-gold); // Gold markers
    animation: subtlePulse 3s infinite ease-in-out; // Apply the animation
  }
}

// 3. Periods Container (.periods-container) and Period Items (.period-item)
.periods-container {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  padding: 15px 5px; // Slightly more padding
  border-bottom: 1px solid var(--border-color);
  background-color: rgba(var(--card-background-color-rgb), 0.5); // Semi-transparent card background for container
  flex-shrink: 0;
}

.period-item {
  font-family: var(--primary-font);
  padding: 10px 20px; // Adjusted padding
  margin: 8px; // Adjusted margin
  border-radius: 5px; // Less rounded for a more classic feel
  color: var(--primary-text-color); // Ensure readability over dynamic background
  text-align: center;
  font-weight: normal; // Playfair often looks better normal weight for titles
  font-size: 1em; // Slightly larger base for Playfair
  box-shadow: 0 1px 3px var(--shadow-color);
  // background-color is set by [style.backgroundColor]="period.color" in HTML
  border: 1px solid var(--accent-color-gold); // Gold border for all periods
  transition: transform 0.2s ease-out, box-shadow 0.2s ease-out, border-color 0.2s ease-out; // Added transition

  h3 {
    margin: 0;
    font-size: inherit; // Inherits 1em
    font-weight: bold; // Make period names stand out
  }

  // Style for Active Period
  &.active-period {
    box-shadow: 0 0 10px var(--accent-color-gold); // Gold glow
    transform: translateY(-2px) scale(1.02); // Slight lift and scale
    font-weight: bold; // Ensure text stands out (already applied to h3, but good for the item itself)
    border-color: var(--accent-color-gold); // Make sure border is prominent (already default, but reinforces)
    // To make the background of the active period slightly more opaque if it uses transparency:
    // background-color: var(--period-color-opaque) or adjust opacity if period.color is rgba
  }
}

// Filter Information Styles
.filter-info-container {
  padding: 15px 20px;
  margin: 15px auto; // Centered with a bit more margin
  background-color: rgba(var(--card-background-color-rgb), 0.7); // Use RGB for opacity
  border: 1px solid var(--border-color);
  border-radius: 5px;
  text-align: center;
  width: fit-content;
  max-width: 90%;
  box-shadow: 0 1px 3px var(--shadow-color);

  h2 {
    font-family: var(--primary-font);
    color: var(--event-title-color);
    font-size: 1.3em;
    margin-top: 0;
    margin-bottom: 10px;
  }
}

.clear-filter-button {
  font-family: var(--primary-font);
  background-color: var(--accent-color-gold);
  color: #fff; // White text on gold for contrast
  // SCSS darken function won't work directly with CSS var
  // Using a slightly darker fixed value or another var if available
  // For simplicity, let's assume a manual darker shade or same border
  border-color: #b89b2e; // Darker gold (manual alternative to SCSS darken)
  padding: 8px 15px;
  border-radius: 4px;
  cursor: pointer;
  font-size: 0.9em;
  transition: background-color 0.2s ease, transform 0.2s ease;

  &:hover {
    background-color: #c7a533; // Darker gold (manual alternative to SCSS darken)
    transform: translateY(-1px);
  }
}

// Filter Progress Bar Styles
.filter-progress-track {
  height: 6px; // Slightly taller for better visibility
  background-color: #e0e0e0; // Light gray track
  width: 100%; // Full width of its container
  margin-top: 8px; // Space from periods
  margin-bottom: 15px; // Space before events or filter info
  border-radius: 3px;
  overflow: hidden; // Ensures inner bar respects border-radius
  // This track itself is shown/hidden by *ngIf="isFiltering" in the HTML
}

.filter-progress-bar {
  height: 100%;
  background-color: var(--accent-color-gold); // Use theme's accent color
  width: 0%; // Initial width, will be set by [style.width] binding
  border-radius: 3px;
  transition: width 0.4s ease-out; // CSS transition for the width change
}

// 4. Events Container (.events-container) and Event Items (.event-item)
.events-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 20px 0; // More padding
  overflow-y: auto;
  overflow-x: hidden;
  flex-grow: 1;
  width: 100%;
  position: relative; // Confirmed: Needed for absolute positioning of scroll indicator
}

// Removed Central Track and Dot Scroll Indicator Styles

.no-events-message {
  text-align: center;
  padding: 30px 20px;
  font-family: var(--primary-font);
  font-size: 1.1em;
  color: var(--secondary-text-color);
  margin-top: 20px;
  p {
    margin: 0;
  }
}

.event-item {
  font-family: var(--primary-font);
  // background-color: var(--card-background-color); // Original, will be overridden by debug
  border: 1px solid var(--border-color); // Original, will be overridden by debug
  border-radius: 5px; 
  padding: 20px; 
  margin: 15px; 
  width: 90%;
  max-width: 520px;
  box-shadow: 0 2px 5px var(--shadow-color);
  cursor: pointer;
  position: relative; 
  // z-index: 2; // Removed as track is no longer behind
  // background-color: var(--card-background-color); // Ensure this is still opaque - Original, will be overridden by debug
  
  // Initial state for IntersectionObserver animation
  opacity: 0; 
  transform: translateY(40px); 
  transition: opacity 0.5s ease-out, // Opacity with a standard ease
              transform 0.6s cubic-bezier(0.34, 1.56, 0.64, 1), // Transform with more bounce
              box-shadow 0.2s ease-in-out; // Keep existing shadow transition

  // Hover state - should still work over the reveal
  &:hover {
    box-shadow: 0 4px 10px var(--shadow-color);
    transform: translateY(-5px) scale(1.03);
  }

  // Visible state for IntersectionObserver
  &.in-view {
    // opacity: 1; // This would re-enable the reveal if base opacity was 0
    // transform: translateY(0); // This would re-enable the reveal if base transform was different
  }

  .event-image {
    max-width: 100%;
    height: auto;
    border-radius: 3px; 
    margin-bottom: 15px; 
    object-fit: cover;
    // border: 1px solid var(--border-color); // Original, will be overridden by debug
    transition: transform 0.3s ease-out; 
  }

  .event-date {
    // font-size: 0.9em; // Original, will be overridden by debug
    // color: var(--secondary-text-color); // Original, will be overridden by debug
    margin-bottom: 8px; 
    // font-style: italic; // Original, will be overridden by debug
  }

  .event-title {
    // font-size: 1.4em; // Original, will be overridden by debug
    // font-weight: bold; // Original, will be overridden by debug
    margin-bottom: 10px; 
    // color: var(--event-title-color); // Original, will be overridden by debug
  }

  .event-summary {
    // font-size: 1em; // Original, will be overridden by debug
    // font-size: 1em; // Original, will be overridden by debug
    // line-height: 1.6; // Original, will be overridden by debug
  }
  // Debug styles removed
}

// Desktop Styles
@media (min-width: 768px) {
  .periods-container {
    flex-wrap: nowrap;
    overflow-x: auto;
    justify-content: flex-start;
    padding: 15px;
  }

  .period-item {
    margin: 0 10px; // Adjusted for desktop
    flex-shrink: 0;
    padding: 12px 22px; // Slightly larger on desktop
  }

  .events-container {
    flex-direction: row;
    overflow-x: auto;
    overflow-y: hidden;
    padding: 25px; // More padding
    align-items: flex-start;
  }

  .event-item { // This is a nested .event-item for desktop, debug styles won't apply here unless also added
    flex: 0 0 auto;
    width: 320px; // Adjusted for desktop
    margin: 0 15px; // Adjusted for desktop
    padding: 25px; // More padding for desktop cards
    // To apply debug styles here too, they'd need to be duplicated or a global debug class used.
    // For now, focusing on the primary .event-item block.

    .event-title { // These are more specific, so they will override the base .event-item .event-title debug styles
      font-size: 1.3em; // Will be overridden by debug if !important is used
      font-weight: bold; // Will be overridden by debug if !important is used
    }
    .event-summary {
      font-size: 0.95em; // Will be overridden by debug if !important is used
    }
  }
}

// 5. Detail View (.event-detail-view) - MODERN STYLES
.event-detail-view {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.7); // Darker overlay for the backdrop
  backdrop-filter: blur(5px); // Optional blur for the backdrop
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  opacity: 0;
  transform: scale(0.8) translateY(30px); // Initial state: smaller and lower
  transition: opacity 0.3s cubic-bezier(0.25, 0.8, 0.25, 1), transform 0.3s cubic-bezier(0.25, 0.8, 0.25, 1); // New transition
  pointer-events: none;

  &.visible {
    opacity: 1;
    transform: scale(1) translateY(0); // Final state: full size and original Y position
    pointer-events: auto;
  }

  .detail-content-area {
    font-family: 'Poppins', sans-serif;
    background-color: #ffffff;
    border: none;
    box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.175);
    border-radius: 8px;
    padding: 1.5rem; // Adjusted padding
    width: 90%;
    max-width: 520px; // Adjusted max-width
    max-height: 85vh;
    overflow-y: auto;
    position: relative;
    display: flex; // Added for flex column layout
    flex-direction: column; // Added for flex column layout
    align-items: center; // Center content by default

    .modal-header-image-container {
      width: calc(100% + 3rem); // Matches padding * 2
      margin: -1.5rem -1.5rem 1.5rem -1.5rem; // Negative margins
      height: 220px;
      overflow: hidden;
      border-radius: 8px 8px 0 0; // Top corners rounded
    }

    .modal-header-image {
      width: 100%;
      height: 100%;
      object-fit: cover;
      display: block;
    }

    h2 {
      font-family: 'Poppins', sans-serif; // Should inherit, but explicit for clarity
      color: #333333;
      font-size: 1.7rem; // Adjusted font size
      font-weight: 600;
      text-align: center; // Centered text
      border-bottom: 1px solid #eeeeee;
      padding-bottom: 0.75rem;
      margin-top: 0; // After image, so 0 is fine
      margin-bottom: 0.75rem; // Adjusted margin
      width: 100%; // Ensure border-bottom spans width
    }

    .event-detail-date {
      font-family: 'Poppins', sans-serif; // Should inherit
      color: #777; // Adjusted color
      font-size: 0.9rem;
      text-align: center; // Centered text
      margin-bottom: 1.5rem;
      font-style: normal;
    }

    .event-detail-description {
      font-family: 'Poppins', sans-serif; // Should inherit
      color: #555555;
      font-size: 1rem;
      line-height: 1.7;
      margin-bottom: 1.5rem;
      text-align: left; // Keep description left-aligned for readability
      width: 100%; // Ensure it takes full width for alignment
    }

    .sources-section, .media-section {
      width: 100%; // Ensure these sections take full width for their content alignment
      margin-top: 1.5rem;
      margin-bottom: 1.5rem;
      h4 {
        font-family: 'Poppins', sans-serif;
        color: #444444;
        font-size: 1.1rem;
        font-weight: 600;
        border-bottom: 1px solid #f0f0f0;
        padding-bottom: 0.5rem;
        margin-bottom: 0.75rem;
        text-align: left; // Ensure section titles are left-aligned
      }
      ul {
        list-style: disc;
        padding-left: 1.25rem;
        li {
          margin-bottom: 0.5rem;
          text-align: left; // Ensure list items are left-aligned
          a {
            color: #007bff;
            text-decoration: none;
            &:hover {
              text-decoration: underline;
            }
          }
        }
      }
    }

    .media-item {
      margin-bottom: 1.5rem;
      text-align: left;
      img, video, audio {
        max-width: 100%;
        height: auto;
        display: block;
        margin-bottom: 0.5rem;
        border-radius: 4px;
        border: 1px solid #eeeeee;
      }
      video { max-height: 350px; }
      .media-item-description {
        font-family: 'Poppins', sans-serif;
        font-size: 0.85rem;
        color: #777777;
        text-align: left;
        margin-top: 0.25rem;
        font-style: normal;
      }
    }
  }

  .close-button { // Position adjusted relative to new padding
    font-family: 'Arial', sans-serif;
    font-size: 1.5rem;
    color: #aaaaaa;
    font-weight: bold;
    background: transparent;
    border: none;
    padding: 0.5rem; // Keep padding on button for click area
    line-height: 1;
    position: absolute;
    top: 0.75rem; // Adjusted for 1.5rem parent padding (0.75rem + 0.5rem button padding ~= 1.25rem from edge)
    right: 0.75rem; // Adjusted for 1.5rem parent padding
    cursor: pointer;
    transition: color 0.2s ease;

    &:hover {
      color: #333333;
    }
  }
}

// 6. Thematic Grouping (Visual Cues - Optional Enhancement)
// These would need to be updated if used, to fit the new theme.
// .event-item.event-group-g1 { border-left: 4px solid var(--accent-color-gold); }
// .event-item.event-group-g2 { border-left: 4px solid var(--event-title-color); }


// Accessibility: Ensure text contrast on period items is managed
// The `color: var(--primary-text-color);` on `.period-item` should provide
// reasonable contrast over most `period.color` values. If not, this needs JS.
// The `border: 1px solid var(--accent-color-gold);` provides a consistent visual cue.
